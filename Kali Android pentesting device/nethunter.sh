#!/bin/bash

# Change files if see fit.
BACONIMG="cm-13.1.2-ZNH2KAS3P0-bacon-signed-fastboot-76d803f730.zip"
BACONTWRP="twrp-3.0.2-0-bacon.img"
HAMIMG="hammerhead-m4b30x-factory-10cfaa5c.zip"
HAMTWRP="twrp-3.0.2-0-hammerhead.img"
SUPERZIP="SR1-SuperSU-v2.78-SR1-20160915123031.zip"

# Update file paths if needed.
KNDIR="/root/kali-nethunter"
LRTDIR="/root/nethunter-LRT"

# DO NOT CHANGE!
wgetcmd="wget -O $LRTDIR"
args=("$@")
firstArgument="${args[0]}"
HELP="nethunter.sh [-b] [--bacon] [-h] [--hammerhead]"

ABORT() {
    [ "$1" ] && echo "[*] Error: $*"
    exit 1
}

# GOOD THING - This stops nethunter-LRT from cloning
if [ ! $firstArgument ]; then
    # firstArgument was empty
    ABORT "$HELP"
fi

# If nethunter-LRT doesn't exist, download it!
if [ ! -d $LRTDIR ]; then
    echo "[*] Cloning NetHunter-LRT..."
    git clone https://github.com/offensive-security/nethunter-LRT $LRTDIR
    #else ask to remove old dir?
fi

function nethunter() {
    # If kali-nethunter dir doesn't exist, download it.
    if [ ! -d $KNDIR ]; then
        echo "[*] Cloning Kali Nethunter..."
        git clone https://github.com/offensive-security/kali-nethunter $KNDIR
    fi
    if [ -d $KNDIR ] && [ ! -f $KNDIR/nethunter-installer/nethunter-*.zip ]; then
        echo "[*] Bootstraping Kali Nethunter..."
        $KNDIR/nethunter-installer/bootstrap.sh
        echo "[*] Building NetHunter..."
        cd $KNDIR/nethunter-installer
        if [ $1 == "buildBacon" ]; then
            python build.py -d oneplus1 --marshmallow --rootfs full
        elif [[ $1 == "buildHammerhead" ]]; then
            python build.py -d hammerhead --marshmallow --rootfs full
        fi
    fi
    # if a built image is created, move custom nethunter image
    if [ -f $KNDIR/nethunter-installer/nethunter-*.zip ]; then
        echo "[*] Moving NetHunter Custom Image..."
        mv $KNDIR/nethunter-installer/nethunter-*.zip $LRTDIR/kaliNethunter
    fi
}

function download () {
  # Download bacon Files
  if [ $1 == "bacon" ]; then
    if [ $2 == "factory" ]; then
        echo "[*] Downloading Bacon Factory Image..."
        $wgetcmd/stockImage/$BACONIMG http://builds.cyngn.com/factory/bacon/$BACONIMG
    elif [[ $2 == "twrp" ]]; then
        echo "[*] Downloading Bacon TWRP Image..."
        $wgetcmd/twrpImage/$BACONTWRP --referer "https://dl.twrp.me/bacon/$BACONTWRP" https://dl.twrp.me/bacon/$BACONTWRP
    elif [[ $2 == "custom" ]]; then
        nethunter buildBacon
    fi
  # Download hammerhead Files
  elif [[ $1 == "hammerhead" ]]; then
    if [ $2 == "factory" ]; then
      echo "[*] Downloading Hammerhead Factory Image..."
      $wgetcmd/stockImage/$HAMIMG https://dl.google.com/dl/android/aosp/$HAMIMG
    elif [[ $2 == "twrp" ]]; then
      echo "[*] Downloading Hammerhead TWRP Image..."
      $wgetcmd/twrpImage/$HAMTWRP --referer "https://dl.twrp.me/hammerhead/$HAMTWRP" https://dl.twrp.me/hammerhead/$HAMTWRP
    elif [[ $2 == "custom" ]]; then
      nethunter buildHammerhead
    fi
  fi
  # Download SuperSu File
  if [ $2 == true ]; then
    echo "[*] Downloading SuperSu..."
    $wgetcmd/superSu/$SUPERZIP --referer "https://download.chainfire.eu/1003/SuperSU/$SUPERZIP" https://download.chainfire.eu/1003/SuperSU/$SUPERZIP?retrieve_file=1
  fi
}

function check () {
    for file in $LRTDIR/$1/*
        do
        # if file exsits
        if [ $file == $LRTDIR/$1/*.$3 ]; then
        # Get File Size
        actualSize=$(wc -c <"$file")
        echo "[*] File Size: $actualSize Found: $file"
    # if file doesn't exsits
    elif [[ $file != $LRTDIR/$1/*.$3 ]]; then
        if [ $firstArgument == "--bacon" ] || [ $firstArgument == "-b" ]; then
            download bacon $2
        fi
        if [ $firstArgument == "--hammerhead" ] || [ $firstArgument == "-h" ]; then
            download hammerhead $2
        fi
    fi
done
}

if [ $firstArgument == "--bacon" ] || [ $firstArgument == "-b" ] || [ $firstArgument == "--hammerhead" ] || [ $firstArgument == "-h" ]; then
    check kaliNethunter custom zip
    check stockImage factory zip
    check twrpImage twrp img
    check superSu true zip
else
    # firstArgument didn't match the previous arguments
    ABORT "$HELP"
fi